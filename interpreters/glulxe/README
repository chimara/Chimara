Glulxe: the Glulx VM interpreter
Version 0.4.7

    Designed by Andrew Plotkin <erkyrath@eblong.com>
    http://eblong.com/zarf/glulx/index.html

* Compiling

Since this is a Glk program, it must be built with a Glk library. See
the Glk home page at

http://eblong.com/zarf/glk/index.html

The Unix Makefile that comes with this package is designed to link any
of the Unix libraries (GlkTerm and CheapGlk.) You'll have to go into
the Makefile and set three variables to find the library. There are
instructions at the top of the Makefile. Then just type

    make glulxe

That should suffice. When the program is built, type

    ./glulxe filename.ulx

where "filename.ulx" is a Glulx game file to execute.

To build this program with a Mac or Window interface, you'll need the
appropriate Glk library.

This program supports floating-point operations, which are implemented
using the standard C99 math functions. The Makefile uses "-lm" to link
these in. If your platform does not support these functions, you can
comment out the "#define FLOAT_SUPPORT" line in glulxe.h.

* Version

0.4.7:
    Abstracted powf() to an osdepend wrapper. (Needed for Windows.)
    Fixed a @ceil bug, for some C math libraries.
    Improved the profiling system in several ways.
    Fixed a bug in glkop.c dispatching, to do with optional array
    arguments.

0.4.6:
    Added floating-point math feature.
    Updated winstart.c. (Thanks David Kinder.)
    Fixed @random even more, on Windows.
    @verify works right on game files with extended memory.
    @getiosys works right when the two store operands are different
    variable types. (E.g., one local and one global.)

0.4.5:
    VERIFY_MEMORY_ACCESS now detects writes to the ROM section of memory.
    Fixed off-by-eight bug in @astorebit and @aloadbit with negative bit
    numbers.
    Fixed an obscure bug with division and modulo of $80000000. (Thanks 
    Evin Robertson.)
    Fixed an extremely obscure problem with changing I/O mode in the middle
    of printing a number.
    Glk array/string operations are now checked for memory overflows
    (though not for ROM writing). This generates a warning at present;
    in the future, it will be a fatal error.
    Better fix for the @random bug.

0.4.4:
    Added profiling code, which is turned off by default. To compile it 
    in, define VM_PROFILING in Makefile or in glulxe.h.
    Added function-accleration feature.
    Fixed bug where @random 0 was returning only positive numbers.

0.4.3:
    Verify the presence of Unicode calls in the Glk library at runtime.
    (Thanks Simon Baldwin.)
    Added a compile-time option to check for invalid memory accesses.
    (This is slower, but safer. Define VERIFY_MEMORY_ACCESS in Makefile
    or in glulxe.h. Thanks Evin Robertson.)
    Fixed a memory leak of undo states. (Thanks Matthew Wightman.)
    Fixed a linked-list handling error for Glk unicode arrays. (Thanks
    David Kinder.)

0.4.2:
    Fixed a bug that preventing compiling with old (pre-Unicode) Glk
    libraries.

0.4.1:
    Added array copy and heap allocation functionality. (Glulx spec 
    3.1.0.)

0.4.0:
    Added Unicode functionality. (Glulx spec 3.0.0.)

0.3.5:
    Fixed El-Stupido bug in the modulo opcode.

0.3.4:
    Finally supports string arguments to Glk calls.

0.3.3:
    Added setiosys, getiosys opcodes.
    Fixed bug in binarysearch.

0.3.2:
    Added search, jumpabs, callf, and gestalt opcodes.

0.3.1:
    Startup code now handles Blorb files correctly.

0.3.0:
    Added support for compressed strings.

0.2.2:
    Another pre-release version.

0.2.0:
    A pre-release version.

* Permissions

The source code in this package is copyright 1999-2010 by Andrew Plotkin.
You may copy and distribute it freely, by any means and under any conditions,
as long as the code and documentation is not changed. You may also
incorporate this code into your own program and distribute that, or modify
this code and use and distribute the modified version, as long as you retain
a notice in your program or documentation which mentions my name and the
URL shown above.

